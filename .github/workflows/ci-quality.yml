name: CI Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Debug - Check Node and npm versions
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"
          echo "Available scripts:"
          npm run --silent 2>/dev/null || echo "No scripts available"

      - name: Debug - List package.json scripts
        run: |
          echo "Package.json scripts:"
          cat package.json | grep -A 20 '"scripts"'

      - name: Run ESLint
        run: |
          echo "🔍 Running ESLint..."
          npm run lint
          echo "✅ ESLint completed"

      - name: Run TypeScript check
        run: |
          echo "🔍 Running TypeScript check..."
          npm run type-check
          echo "✅ TypeScript check completed"

      - name: Run unit tests
        run: |
          echo "🔍 Running unit tests..."
          npm run test:unit:ci
          echo "✅ Unit tests completed"

      - name: Run integration tests
        run: |
          echo "🔍 Running integration tests..."
          npm run test:integration:ci
          echo "✅ Integration tests completed"

      - name: Check formatting
        run: |
          echo "🔍 Checking formatting..."
          npm run format:check
          echo "✅ Formatting check completed"

      - name: Generate coverage
        run: |
          echo "🔍 Generating coverage..."
          npm run test:coverage:ci
          echo "✅ Coverage generation completed"

      - name: Verify coverage files
        run: |
          echo "🔍 Checking coverage files:"
          ls -la coverage/ || echo "Coverage directory not found"
          if [ -f coverage/lcov.info ]; then
            echo "✅ lcov.info exists ($(wc -l < coverage/lcov.info) lines)"
            head -5 coverage/lcov.info
          else
            echo "❌ lcov.info missing"
          fi

      # Temporarily disable codecov upload to isolate CI issues
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v5
      #   if: success()
      #   with:
      #     files: ./coverage/lcov.info
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: false
      #     verbose: false