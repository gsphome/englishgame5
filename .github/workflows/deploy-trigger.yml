name: Deploy Trigger

on:
  workflow_run:
    workflows: ["CI/CD Orchestrator"]
    types:
      - completed
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

jobs:
  check-and-deploy:
    name: Check CI Status and Deploy
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get workflow run details
        id: workflow-details
        run: |
          # Get the workflow run ID
          WORKFLOW_RUN_ID="${{ github.event.workflow_run.id }}"
          echo "workflow_run_id=$WORKFLOW_RUN_ID" >> $GITHUB_OUTPUT
          
          # Get commit SHA
          COMMIT_SHA="${{ github.event.workflow_run.head_sha }}"
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          
          echo "🔍 Checking CI/CD Orchestrator results..."
          echo "Workflow Run ID: $WORKFLOW_RUN_ID"
          echo "Commit SHA: $COMMIT_SHA"

      - name: Check individual pipeline status
        id: pipeline-status
        run: |
          # Use GitHub CLI to get the status of individual workflows for this commit
          COMMIT_SHA="${{ steps.workflow-details.outputs.commit_sha }}"
          
          echo "🔍 Checking pipeline status for commit: $COMMIT_SHA"
          
          # Get all workflow runs for this commit
          gh api repos/${{ github.repository }}/actions/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$COMMIT_SHA\") | {name: .name, conclusion: .conclusion, status: .status}" \
            > workflow_status.json
          
          cat workflow_status.json
          
          # Check specific pipeline status
          QUALITY_STATUS=$(jq -r '.[] | select(.name == "Quality Checks") | .conclusion' workflow_status.json | head -1)
          SECURITY_STATUS=$(jq -r '.[] | select(.name == "Security Checks") | .conclusion' workflow_status.json | head -1)
          BUILD_STATUS=$(jq -r '.[] | select(.name == "Build Pipeline") | .conclusion' workflow_status.json | head -1)
          
          echo "quality_status=${QUALITY_STATUS:-unknown}" >> $GITHUB_OUTPUT
          echo "security_status=${SECURITY_STATUS:-unknown}" >> $GITHUB_OUTPUT
          echo "build_status=${BUILD_STATUS:-unknown}" >> $GITHUB_OUTPUT
          
          echo "📊 Pipeline Status:"
          echo "- Quality: $QUALITY_STATUS"
          echo "- Security: $SECURITY_STATUS"
          echo "- Build: $BUILD_STATUS"
          
          # Verify all pipelines succeeded
          if [[ "$QUALITY_STATUS" == "success" && "$SECURITY_STATUS" == "success" && "$BUILD_STATUS" == "success" ]]; then
            echo "all_pipelines_success=true" >> $GITHUB_OUTPUT
            echo "✅ All pipelines succeeded - proceeding with deployment"
          else
            echo "all_pipelines_success=false" >> $GITHUB_OUTPUT
            echo "❌ Not all pipelines succeeded - deployment blocked"
            echo "Quality: $QUALITY_STATUS, Security: $SECURITY_STATUS, Build: $BUILD_STATUS"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Trigger deployment
        if: steps.pipeline-status.outputs.all_pipelines_success == 'true'
        uses: ./.github/workflows/deploy.yml
        with:
          artifact-name: build-files-${{ steps.workflow-details.outputs.commit_sha }}
          quality-status: ${{ steps.pipeline-status.outputs.quality_status }}
          security-status: ${{ steps.pipeline-status.outputs.security_status }}
          build-status: ${{ steps.pipeline-status.outputs.build_status }}

      - name: Deployment blocked
        if: steps.pipeline-status.outputs.all_pipelines_success != 'true'
        run: |
          echo "🚫 Deployment blocked due to pipeline failures"
          echo "Quality: ${{ steps.pipeline-status.outputs.quality_status }}"
          echo "Security: ${{ steps.pipeline-status.outputs.security_status }}"
          echo "Build: ${{ steps.pipeline-status.outputs.build_status }}"
          echo ""
          echo "All pipelines must succeed before deployment can proceed."
          exit 1

      - name: Summary
        if: always()
        run: |
          echo "## 🚀 DEPLOY TRIGGER - SUMMARY" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger:** CI/CD Orchestrator completion" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ steps.workflow-details.outputs.commit_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.event.workflow_run.head_branch }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Pipeline Gate Status" >> $GITHUB_STEP_SUMMARY
          echo "| Pipeline | Status | Required | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Quality | ${{ steps.pipeline-status.outputs.quality_status }} | ✅ Success | ${{ steps.pipeline-status.outputs.quality_status == 'success' && '✅ PASS' || '❌ FAIL' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ steps.pipeline-status.outputs.security_status }} | ✅ Success | ${{ steps.pipeline-status.outputs.security_status == 'success' && '✅ PASS' || '❌ FAIL' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ steps.pipeline-status.outputs.build_status }} | ✅ Success | ${{ steps.pipeline-status.outputs.build_status == 'success' && '✅ PASS' || '❌ FAIL' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.pipeline-status.outputs.all_pipelines_success }}" == "true" ]]; then
            echo "### ✅ DEPLOYMENT: TRIGGERED" >> $GITHUB_STEP_SUMMARY
            echo "All quality gates passed - deployment initiated" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ DEPLOYMENT: BLOCKED" >> $GITHUB_STEP_SUMMARY
            echo "One or more quality gates failed - deployment blocked" >> $GITHUB_STEP_SUMMARY
          fi