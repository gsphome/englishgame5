{
  "name": "fluentflow-app",
  "version": "2.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite --mode development --config config/vite.config.ts",
    "build": "tsc --project config/tsconfig.json && vite build --mode production --config config/vite.config.ts",
    "build:dev": "tsc --project config/tsconfig.json && vite build --mode development --config config/vite.config.ts",
    "build:analyze": "npm run build && npx vite-bundle-analyzer",

    "preview": "vite preview --config config/vite.config.ts",
    "deploy": "gh-pages -d dist",
    "test": "vitest run --config config/vitest.config.ts",
    "test:watch": "vitest --config config/vitest.config.ts",
    "test:coverage": "vitest run --coverage --config config/vitest.config.ts",
    "test:unit": "vitest run tests/unit --config config/vitest.config.ts",
    "test:integration": "vitest run tests/integration --config config/vitest.config.ts",
    "test:e2e": "vitest run tests/e2e --config config/vitest.config.ts",
    "test:ui": "vitest --ui",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 20 --config config/eslint.config.js",
    "lint:fix": "eslint . --ext ts,tsx --fix --config config/eslint.config.js",
    "format": "prettier --config config/.prettierrc --ignore-path config/.prettierignore --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --config config/.prettierrc --ignore-path config/.prettierignore --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "type-check": "tsc --noEmit --project config/tsconfig.json",
    "cleanup": "node scripts/cleanup.js",
    "security:patterns": "echo '🔍 Checking for security patterns...' && (grep -r 'dangerouslySetInnerHTML' src/ || echo 'No dangerouslySetInnerHTML found') && (grep -r 'eval(' src/ || echo 'No eval() found') && (grep -r 'document.write' src/ || echo 'No document.write found') && echo '✅ Security patterns check completed'",
    "security:licenses": "npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;0BSD;Python-2.0;BlueOak-1.0.0;MIT-0;CC-BY-4.0;MIT*;(AFL-2.1 OR BSD-3-Clause);(MIT OR CC0-1.0);MIT AND ISC' --excludePrivatePackages",
    "build:verify": "echo '🔍 Verifying build output...' && test -d dist && test -f dist/index.html && echo '✅ Build verification passed' || (echo '❌ Build verification failed' && exit 1)",
    "build:size-check": "echo '📊 Checking bundle size...' && find dist/assets -name 'index-*.js' -exec du -k {} \\; | awk '{if($1>1000) {print \"⚠️ Warning: Bundle size is \" $1 \"KB (>1MB)\"} else {print \"✅ Bundle size OK: \" $1 \"KB\"}}' || echo '📦 Bundle size check completed'",
    "cache-logs:toggle": "node scripts/toggle-cache-logs.js",
    "dev-tools": "node scripts/dev-tools.js",
    "pipeline": "node scripts/dev-tools.js interactive",
    "pipeline:quality": "node scripts/dev-tools.js quality",
    "pipeline:security": "node scripts/dev-tools.js security",
    "pipeline:build": "node scripts/dev-tools.js build",
    "pipeline:all": "node scripts/dev-tools.js all",
    "ci:quality": "node scripts/dev-tools.js quality --ci-mode",
    "ci:security": "node scripts/dev-tools.js security --ci-mode",
    "ci:build": "node scripts/dev-tools.js build --ci-mode",
    "ci:all": "node scripts/dev-tools.js all --ci-mode",
    "commit": "node scripts/smart-commit.js",
    "commit:auto": "node scripts/smart-commit.js --auto",
    "commit:push": "node scripts/smart-commit.js --stage-all --push",
    "flow": "npm run pipeline",
    "flow:quick": "node scripts/dev-tools.js commit",
    "flow:safe": "node scripts/dev-tools.js safe",
    "flow:full": "node scripts/dev-tools.js full",
    "test-scripts": "node scripts/test-runner.js",
    "validate:integration": "node scripts/validate-integration.js",
    "debug:pipeline": "echo '🐛 Pipeline debugging info:' && echo 'Node version:' && node --version && echo 'NPM version:' && npm --version && echo 'Dependencies status:' && npm ls --depth=0 2>/dev/null | head -10 && echo 'Build environment:' && npm run type-check --silent && echo '✅ Debug info collected'"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.9.1",
    "@tanstack/react-query": "^5.62.7",
    "fuse.js": "^7.0.0",
    "i18next": "^25.4.1",
    "lucide-react": "^0.468.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.0",
    "react-i18next": "^15.1.2",
    "recharts": "^2.13.3",
    "zod": "^3.24.1",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.34.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/node": "^24.3.0",
    "@types/react": "^18.3.17",
    "@types/react-dom": "^18.3.5",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@typescript-eslint/eslint-plugin": "^8.18.1",
    "@typescript-eslint/parser": "^8.18.1",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.20",
    "eslint": "^9.17.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-react-refresh": "^0.4.16",
    "gh-pages": "^6.3.0",
    "globals": "^16.3.0",
    "jsdom": "^25.0.1",
    "msw": "^2.11.1",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.7.2",
    "vite": "^7.1.5",
    "vite-plugin-pwa": "^0.21.1",
    "vitest": "^3.2.4",
    "workbox-window": "^7.3.0"
  }
}
